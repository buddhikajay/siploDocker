version: '2'

services:
    db:
        image: mysql
        volumes:
            - "./.data/db:/var/lib/mysql"
            - "./mysql/init.sh:/docker-entrypoint-initdb.d/init.sh"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            WHITEBOARD_DB_USER: ${WHITEBOARD_DB_USER}
            WHITEBOARD_DB_NAME: ${WHITEBOARD_DB_NAME}
            WHITEBOARD_DB_PASSWORD: ${WHITEBOARD_DB_PASSWORD}
            COTURN_DB_USER: ${COTURN_DB_USER}
            COTURN_DB_NAME: ${COTURN_DB_NAME}
            COTURN_DB_PASSWORD: ${COTURN_DB_PASSWORD}

    php:
        build: php7-fpm
        ports:
            - 9000:9000
        links:
            - db:mysqldb
            - redis
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ./logs/symfony:/var/www/symfony/app/logs
    nginx:
        build: nginx
        ports:
            - 83:80
        links:
            - php
            - whiteboard
            - media
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx
        environment:
            - VIRTUAL_HOST=${DOMAIN_NAME}
    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - ./certs:/etc/nginx/certs
    elk:
        image: willdurand/elk
        ports:
            - 81:80
        volumes:
            - ./elk/logstash:/etc/logstash
            - ./elk/logstash/patterns:/opt/logstash/patterns
        volumes_from:
            - php
            - nginx
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        links:
            - db
        environment:
            PMA_USER: root
            PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    redis:
        image: redis:alpine
        ports:
            - 6380:6379
    whiteboard:
        build: draw
        container_name: whiteboard
        ports:
            - 9002:9002
        depends_on:
            - db
        environment:
            DB_TYPE: mysql
            DB_USER: ${WHITEBOARD_DB_USER}
            DB_PASSWORD: ${WHITEBOARD_DB_PASSWORD}
            DB_HOST: db
            DB_NAME: ${WHITEBOARD_DB_NAME}
            VIRTUAL_HOST: whiteboard.${DOMAIN_NAME}
    media:
        build: signalmaster
        container_name: media
        ports:
            - "8888:8888"
        depends_on:
            - coturn
        links:
            - coturn
        environment:
            TURNSERVER_HOST: coturn
            TURNSERVER_SECRET: ${COTURN_SECRET}
            TURNSERVER_EXPIERY: 86400
            NODE_ENV: production
            VIRTUAL_HOST: media.${DOMAIN_NAME}
    coturn:
        build: docker-turnserver
        depends_on:
            - db
        container_name: coturn
        ports:
            - "3478:3478/udp" # STUN/TURN UDP
            - "3478:3478/tcp" # STUN/TURN TCP
            - "3479:3479/udp" # STUN/TURN UDP Alt port (RFC5780 support)
            - "3479:3479/tcp" # STUN/TURN TCP Alt port (RFC5780 support)
            - "5349:5349/udp" # STUN/TURN DTLS
            - "5349:5349/tcp" # STUN/TURN TLS
            - "5350:5350/udp" # STUN/TURN DTLS Alt port (RFC5780 support)
            - "5350:5350/tcp" # STUN/TURN TLS Alt port (RFC5780 support)
            - "49152:65535/udp" # UDP media ports for TURN relay
        restart: always
        links:
            - db
        environment:
            VIRTUAL_HOST: turn.${DOMAIN_NAME}
            COTURN_SECRET: ${COTURN_SECRET}
            COTURN_DB_USER: ${COTURN_DB_USER}
            COTURN_DB_NAME: ${COTURN_DB_NAME}
            COTURN_DB_PASSWORD: ${COTURN_DB_PASSWORD}